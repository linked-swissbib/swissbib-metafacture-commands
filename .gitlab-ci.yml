variables:
  APP_VERSION: "1.1"
stages:
- build
- integrate
# - test
- deploy



build_sb_commands:
  stage: build
  image: java:8-jdk
  cache:
    paths:
    - .gradle/wrapper
    - .gradle/caches
  before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  script:
  - ./gradlew shadowJar
  artifacts:
    paths:
    - build/libs/*.jar
    expire_in: 1 day


integrate_sb_commands:
  stage: integrate
  image: archlinux/base:latest
  before_script:
  - pacman -Syy
  - pacman -S --noconfirm wget tar
  script:
  - wget https://github.com/metafacture/metafacture-core/releases/download/metafacture-core-5.0.0/metafacture-core-5.0.0-dist.tar.gz
  - tar xzf metafacture-core-5.0.0-dist.tar.gz
  - cp build/libs/swissbibMF-plugins-$APP_VERSION-all.jar metafacture-core-5.0.0-dist/plugins
  artifacts:
    paths:
    - metafacture-core-5.0.0-dist
    expire_in: 1 day


# e2e_tests:
#   stage: test

deploy_to_docker_hub:
  stage: deploy
  image: docker:latest
  services:
  - docker:dind
  before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
  - docker build --pull -t "$CI_REGISTRY_IMAGE" .
  - docker push "$CI_REGISTRY_IMAGE"
# only:
# - master
