# Sources:

#write-swissbib-searchengine org.swissbib.linked.mf.writer.es.SearchEngineWriter
#write-swissbib-sparql org.swissbib.linked.mf.writer.sparql.SparqlWriter
write-rdf-1line=org.swissbib.linked.mf.writer.SingleLineWriterRDFXml
write-esbulk=org.swissbib.linked.mf.writer.ESBulkWriter
index-esbulk=org.swissbib.linked.mf.writer.ESBulkIndexer
encode-esbulk=org.swissbib.linked.mf.pipe.ESBulkEncoder
split-entities=org.swissbib.linked.mf.pipe.EntitySplitter
decode-ntriples=org.swissbib.linked.mf.decoder.NtriplesDecoder
encode-ntriples=org.swissbib.linked.mf.pipe.NtriplesEncoder
update-es-id=org.swissbib.linked.mf.pipe.ESIdUpdate
lookup-es=org.swissbib.linked.mf.pipe.ESLookup
index-neo4j=org.swissbib.linked.mf.writer.NeoIndexer
itemerase-es=org.swissbib.linked.mf.pipe.ESItemEraser
write-neo4j=org.swissbib.linked.mf.writer.NeoWriter
encode-neo4j=org.swissbib.linked.mf.pipe.NeoEncoder
write-socket=org.swissbib.linked.mf.writer.SocketWriter
write-kafka=org.swissbib.linked.mf.writer.KafkaWriter
ext-filter=org.swissbib.linked.mf.pipe.ExtFilter
decode-json=org.swissbib.linked.mf.decoder.JsonDecoder
write-csv=org.swissbib.linked.mf.writer.ContinuousCsvWriter
open-multi-http=org.swissbib.linked.mf.source.MultiHttpOpener
handle-marcxml-sru=org.swissbib.linked.mf.decoder.MarcXmlSruHandler
handle-marcxml-sb=org.swissbib.linked.mf.decoder.MarcXmlSbHandler
read-json-object=org.swissbib.linked.mf.io.JsonObjectReader
read-kafka=org.swissbib.linked.mf.source.MfKafkaConsumer
turtle-producer=org.swissbib.linked.mf.writer.TurtleProducer
